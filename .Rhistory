state.name("MI")
state.name()
"MI" %>% state.name
elected$normalizedInput$state
elected$divisions$`ocd-division/country:us/state:mi`
elected$divisions$`ocd-division/country:us/state:mi`$name
source('~/INFO201/a5-api-idomori/process_data.R')
pick$first_name
has_twitter(twitter)
pick$name
pick$name
rep %>% View()
rep %>% View()
member_data$url
source("keys.R")
library(dplyr)
library(jsonlite)
library(httr)
knitr::opts_chunk$set(error=TRUE)
address <- "San Francisco, CA"
source('process_data.R')
knitr::kable(repTable)
barplot(party_data, col = c("darkblue", "red"), names.arg = c("Democrat", "Republican"),
main = "Party affiliation distribution of House members of Michigan", xlab = "# of Representatives",
ylab="Party", horiz = TRUE)
barplot(gender_data, names.arg = c("Female", "Male"),
main = "Gender distribution of House members of Michigan", ylab = "Gender",
xlab="# of Representatives", horiz = TRUE)
state
elected$normalizedInput
elected$divisions$`ocd-division/country:us/state:ca`
elected$divisions[2]
elected$divisions[[2]
elected$divisions[[2]]
elected$divisions
elected$divisions %>% View()
elected$divisions[1]
elected$divisions[2]
elected$divisions[2][1]
elected$divisions[2][[1]
elected$divisions[2][[1]]
elected$kind
elected$divisions$`ocd-division/country:us`
elected$divisions %>% View()
elected$divisions[[1]]
elected$divisions[[2]]
elected$divisions[[2]][1]
elected$divisions[[2]][[1]]
source('~/INFO201/a5-api-idomori/process_data.R')
source("keys.R")
library(dplyr)
library(jsonlite)
library(httr)
knitr::opts_chunk$set(error=TRUE)
address <- "San Francisco, CA"
source('process_data.R')
knitr::kable(repTable)
barplot(party_data, col = c("darkblue", "red"), names.arg = c("Democrat", "Republican"),
main = "Party affiliation distribution of House members of Michigan", xlab = "# of Representatives",
ylab="Party", horiz = TRUE)
barplot(gender_data, names.arg = c("Female", "Male"),
main = "Gender distribution of House members of Michigan", ylab = "Gender",
xlab="# of Representatives", horiz = TRUE)
source("keys.R")
library(dplyr)
library(jsonlite)
library(httr)
knitr::opts_chunk$set(error=TRUE)
address <- "Ann Arbor, MI"
source('process_data.R')
knitr::kable(repTable)
barplot(party_data, col = c("darkblue", "red"), names.arg = c("Democrat", "Republican"),
main = "Party affiliation distribution of House members of Michigan", xlab = "# of Representatives",
ylab="Party", horiz = TRUE)
barplot(gender_data, names.arg = c("Female", "Male"),
main = "Gender distribution of House members of Michigan", ylab = "Gender",
xlab="# of Representatives", horiz = TRUE)
source("keys.R")
library(dplyr)
library(jsonlite)
library(httr)
knitr::opts_chunk$set(error=TRUE)
address <- "Ann Arbor, MI"
source('process_data.R')
knitr::kable(repTable)
barplot(party_data, col = c("darkblue", "red"), names.arg = c("Democrat", "Republican"),
main = "Party affiliation distribution of House members of Michigan", xlab = "# of Representatives",
ylab="Party", horiz = TRUE)
barplot(gender_data, names.arg = c("Female", "Male"),
main = "Gender distribution of House members of Michigan", ylab = "Gender",
xlab="# of Representatives", horiz = TRUE)
ggplot2::aes()
Youtubte
Youtube
library(ggplot2)
ggplot()
plot(-5:5. x^2)
plot(-5:5, x^2)
plot(-5:5)
diamonds
ggplot(diamonds)
ggplot(diamondsm aes(x = carat, y = price)) + geom_point()
ggplot(diamondsm, aes(x = carat, y = price)) + geom_point()
ggplot(diamonds, aes(x = carat, y = price)) + geom_point()
ggplot(diamonds, aes(x = carat, y = price))
ggplot(diamonds, aes(x = carat, y = price)) + geom_point()
ggplot(diamonds, aes(x = carat, y = price)) + geom_abline()
ggplot(diamonds, aes(x = carat, y = price)) + geom_bar()
ggplot(economics, aes(x=date, y=uempmed)) + geom_line()
ggplot(economics, aes(x=date, y=uempmed)) + geom_line() + geom_point()
ggplot(gdp, aes(date, growth)) + geom_col()
ggplot(gdp, aes(date, growth)) + geom_col()
install.packages(gdp)
install.packages("gdp")
gdp
party(c(rep("R", 10), rep("D", 10)))
party <- c(rep("R", 10), rep("D", 10))
reps <- data.frame(party)
ggplot(reps, aes(date, growth)) + geom_col()
reps
ggplot(reps, aes(D, R)) + geom_col()
map_data("France")
install.packages(map)
install.packages("map")
map_data("france")
install.packages("maps")
map_data
map_data("france")
fr <- map_data("france")
ggplot(fr, aes(long lat)) + geom_polygon(aees(group=group))
ggplot(fr, aes(long, lat)) + geom_polygon(aees(group=group))
ggplot(fr, aes(long, lat)) + geom_polygon(aes(group=group))
ggplot(map_data("brazil"), aes(long, lat)) + geom_polygon(aes(group=group))
ggplot(map_data("germany"), aes(long, lat)) + geom_polygon(aes(group=group))
ger <- map_data("germany")
ger <- map_data("france")
View(ger)
View(ger)
ggplot(map_data("state"), aes(long, lat)) + geom_polygon(aes(group=group))
ggplot(map_data("china"), aes(long, lat)) + geom_polygon(aes(group=group))
ggplot(map_data("canada"), aes(long, lat)) + geom_polygon(aes(group=group))
ggplot(map_data("russia"), aes(long, lat)) + geom_polygon(aes(group=group))
ggplot(map_data("new zealand"), aes(long, lat)) + geom_polygon(aes(group=group))
ggplot(map_data("newzealand"), aes(long, lat)) + geom_polygon(aes(group=group))
ggplot(map_data("italy"), aes(long, lat)) + geom_polygon(aes(group=group))
ggplot(map_data("spain"), aes(long, lat)) + geom_polygon(aes(group=group))
ggplot(map_data("switzerland"), aes(long, lat)) + geom_polygon(aes(group=group))
ggplot(map_data("sweden"), aes(long, lat)) + geom_polygon(aes(group=group))
ggplot(map_data("denmark"), aes(long, lat)) + geom_polygon(aes(group=group))
ggplot(map_data("state"), aes(long, lat)) + geom_polygon(aes(group=group), col="red")
ggplot(map_data("france"), aes(long, lat)) + geom_polygon(aes(group=group), col="red")
ggplot(map_data("italy"), aes(long, lat)) + geom_polygon(aes(group=group), col="red")
ggplot(map_data("britain"), aes(long, lat)) + geom_polygon(aes(group=group), col="red")
ggplot(map_data("UK"), aes(long, lat)) + geom_polygon(aes(group=group), col="red")
ggplot(map_data("germany"), aes(long, lat)) + geom_polygon(aes(group=group), col="red")
ggplot(map_data("japan"), aes(long, lat)) + geom_polygon(aes(group=group), col="red")
ggplot(map_data("korea"), aes(long, lat)) + geom_polygon(aes(group=group), col="red")
ggplot(map_data("india"), aes(long, lat)) + geom_polygon(aes(group=group), col="red")
ggplot(map_data("belgium"), aes(long, lat)) + geom_polygon(aes(group=group), col="red")
ggplot(map_data("netherlands"), aes(long, lat)) + geom_polygon(aes(group=group), col="red")
ggplot(map_data("italy"), aes(long, lat)) + geom_polygon(aes(group=group), col="white")
ggplot(map_data("italy"), aes(long, lat)) + geom_polygon(col="white")
ggplot(map_data("italy"), aes(long, lat)) + geom_polygon(aes(group=group), col="white")
ggplot(map_data("state"), aes(long, lat)) + geom_polygon(col="red")
ggplot(diamonds, aes(carat, price)) + geom_bin2d
ggplot(diamonds, aes(carat, price)) + geom_bin2d()
okay
ggplot(map_data("italy"), aes(long, lat)) + geom_polygon(aes(group=group), fill = "white")
ggplot(map_data("italy"), aes(long, lat)) + geom_polygon(aes(group=group))
ggplot(map_data("italy"), aes(long, lat)) + geom_polygon(aes(group=group), col="white")
ggplot(map_data("italy"), aes(long, lat)) + geom_polygon(aes(group=group), fill="khaki")
ggplot(map_data("italy"), aes(long, lat)) + geom_polygon(aes(group=group), fill="khaki", col="white")
ggplot(map_data("italy"), aes(long, lat)) + geom_polygon(aes(group=group), fill="khaki", col="maroon")
ggplot(map_data("italy"), aes(long, lat)) + geom_polygon(aes(group=group), fill="khaki", col="azure")
ggplot(map_data("italy"), aes(long, lat)) + geom_polygon(aes(group=group), fill="khaki", col="maroon")
head(fr)
ggplot(fr, aes(long, lat)) + geom_polygon(aes(group=group), fill="khaki", col="maroon")
ggplot(fr, aes(long, lat)) + geom_polygon(aes(group=groupm fill=region), fill="khaki", col="maroon")
ggplot(fr, aes(long, lat)) + geom_polygon(aes(group=groupm fill=region), col="maroon")
ggplot(fr, aes(long, lat)) + geom_polygon(aes(group=group, fill=region), col="maroon")
ggplot(fr, aes(long, lat)) + geom_polygon(aes(group=group), fill="blue" col="maroon")
ggplot(fr, aes(long, lat)) + geom_polygon(aes(group=group), fill="blue", col="maroon")
ggplot(fr, aes(long, lat)) + geom_polygon(aes(group=group), fill="blue", col="white")
premium
precursor
ggplot(diamonds, aes(carat, price)) + geom_point(aes(col=cut)
)
ggplot(diamonds, aes(carat, price)) + geom_point(aes(col=cut), alpha=0.1)
dm <- diamonds %>% sample_n(1000)
library(tidyr)
dm <- diamonds %>% sample_n(1000)
dm <- diamonds %>% sample(1000)
sqrt(1)
X <- 0.561
num <- (-X)^2*0.606+(1-X)^2*0.299+(2-X)^2*0.058+(3-X)^2*0.002+(4-X)^2*0.035
sqrt(num)
0.299+4*0.058+9*0.002+16*0.035
1.109 - 0.561^2
0.005+2*0.0263+3*0.0824+4*0.1692+5*0.2383+6*0.2331+7*0.1564+8*0.0688+9*0.0180+0.0021*10
0.005+2*0.0263+3*0.0824+4*0.1692+5*0.2383+6*0.2331+7*0.1564+8*0.0688+9*0.0180+0.0021*10
X <- 0.005+2*0.0263+3*0.0824+4*0.1692+5*0.2383+6*0.2331+7*0.1564+8*0.0688+9*0.0180+0.0021*10
0.004(-X) + 0.005(1-X)+(2-X)*0.0263+(3-X)*0.0824+(4-X)*0.1692+(5-X)*0.2383+(6-X)*0.2331+(7-X)*0.1564+(8-X)*0.0688+(9-X)*0.0180+0.0021*(10-X)
0.004(-X) + 0.005(1-X)+(2-X)*0.0263+(3-X)*0.0824+(4-X)*0.1692+(5-X)*0.2383+(6-X)*0.2331+(7-X)*0.1564+(8-X)*0.0688+(9-X)*0.0180+0.0021*(10-X)
X
0.004(-X)^2 + 0.005(1-X)^2 + (2-X)^2*0.0263 + (3-X)^2*0.0824 + (4-X)^2*0.1692 + (5-X)^2*0.2383 + (6-X)^2*0.2331+(7-X)^2*0.1564+(8-X)^2*0.0688+(9-X)^2*0.0180+0.0021*(10-X)^2
0.004(-X)^2 + 0.005(1-X)^2 + (2-X)^2*0.0263 + (3-X)^2*0.0824 + (4-X)^2*0.1692 + (5-X)^2*0.2383 + (6-X)^2*0.2331+(7-X)^2*0.1564+(8-X)^2*0.0688+(9-X)^2 * 0.0180+0.0021 * (10-X)^2
0.004(-X)^2
0.004(-X)^2 + 0.005(1-X)^2 + (2-X)^2*0.0263 + (3-X)^2*0.0824 + (4-X)^2*0.1692 + (5-X)^2*0.2383 + (6-X)^2*0.2331+(7-X)^2*0.1564+(8-X)^2*0.0688+(9-X)^2 * 0.0180+0.0021 * (10-X)^2
X
0.004(-X)^2
0.004*(-X)^2 + 0.005*(1-X)^2 + (2-X)^2*0.0263 + (3-X)^2*0.0824 + (4-X)^2*0.1692 + (5-X)^2*0.2383 + (6-X)^2*0.2331+(7-X)^2*0.1564+(8-X)^2*0.0688+(9-X)^2 * 0.0180+0.0021 * (10-X)^2
0.004*(-X)^2 + 0.005*(1-X)^2 + (2-X)^2*0.0263 + (3-X)^2*0.0824 + (4-X)^2*0.1692 + (5-X)^2*0.2383 + (6-X)^2*0.2331+(7-X)^2*0.1564+(8-X)^2*0.0688+(9-X)^2 * 0.0180+0.0021 * (10-X)^2
num <- 0.004*(-X)^2 + 0.005*(1-X)^2 + (2-X)^2*0.0263 + (3-X)^2*0.0824 + (4-X)^2*0.1692 + (5-X)^2*0.2383 + (6-X)^2*0.2331+(7-X)^2*0.1564+(8-X)^2*0.0688+(9-X)^2 * 0.0180+0.0021 * (10-X)^2
sqrt(num)
num <- 0.0004*(-X)^2 + 0.005*(1-X)^2 + (2-X)^2*0.0263 + (3-X)^2*0.0824 + (4-X)^2*0.1692 + (5-X)^2*0.2383 + (6-X)^2*0.2331+(7-X)^2*0.1564+(8-X)^2*0.0688+(9-X)^2 * 0.0180+0.0021 * (10-X)^2
sqrt(num)
sqrt(0.794279)
0.89^2
curve(dunif(x, min = -1, max = 2), xlim - c(-2, 3))
curve(dunif(x, min = -1, max = 2), xlim - c(-2, 3))
curve(dnorm(x), xlim = c(-3, 3),
main = "The Standard Normal Distribution", ylab = "Density")
dnorm(x)
curve(dnorm(x, mean = 2, sd = 0.5), xlim = c(-4, 4), col = "red",
main = "The Normal Distribution", ylab = "Density")
curve(dnorm(x, mean = -1, sd = 1), xlim = c(-4, 4), add = TRUE, col = "blue")
text(x = c(-1, 2), y = c(0.2, 0.4), labels = c("N(-1, 1.0)", "N(2, 0.5)"),
col = c("blue", "red"))
curve(dunif(x, min = -1, max = 2), xlim = c(-2, 3),
main = "PDF of Unif(min = -1, max = 2)", ylab = "Density")
rexp(n = 5, rate = 0.2)
rexp(n = 5, rate = 0.2)
rexp(n = 5, rate = 0.2)
data = rexp(n = 10000, rate = 0.2)
hist(data, main = "Histogram of Exp(rate = 0.2)")
data = rexp(n = 10000, rate = 0.2)
hist(data, main = "Histogram of Exp(rate = 0.2)")
curve(dexp(x, rate = 0.2), xlim = c(0, 50))
dexp(x, rate = 0.2)
dexp(100000, rate = 0.2)
dexp(100000, rate = 0.2)
curve(pexp(x, rate = 0.2), xlim = c(0, 50))
sample(x = c("H", "T", size = 500)
)
sample(x = c("H", "T"), size = 500, replace TRUE)
sample(x = c("H", "T"), size = 500, replace=TRUE)
coins <- sample(x = c("H", "T"), size = 500, replace=TRUE)
plot(cumsum(coins == "Heads") / (1:500))
plot(cumsum(coins == "Heads") / (1:500), type = "l")
plot(cumsum(coins == "Heads") / (1:500), type = "l", ylim = c(0,1)
)
coins
plot(cumsum(coins == "H") / (1:500), type = "l", ylim = c(0,1)
)
runif(n = 10, min = -1, max = 2)
u10 <- runif(n = 10, min = -1, max = 2)
u20 <- runif(n = 20, min = -1, max = 2)
par(mfrow = c(1,3))
hist(u10, xlim = c(-2, 3))
hist(u50, xlim = c(-2, 3))
hist(u20, xlim = c(-2, 3))
qqnorm(u10)
install.packages("data.table")
sample(1:4, 0.25)
sample(1:4, p = 0.25)
sample(4, p = 0.25)
!sample()
!sample
?sample()
?sample(1:4 ,replace=TRUE)
sample(1:4 ,replace=TRUE)
sample(1:4 ,replace=TRUE)
sample(1:4, 1, replace=TRUE)
sample(1:4, 1, replace=TRUE)
sample(1:4, 1, replace=TRUE)
sample(1:4, 1, replace=TRUE)
sample(1:4, 1, replace=TRUE)
sample(1:4, 1, replace=FALSE)
sample(1:4, 1, replace=FALSE)
sample(1:4, 1, replace=FALSE)
sample(1:4, replace=FALSE)
sample(1:4, replace=FALSE)
binom()
binom(1:4, )
binom(1:4)
?binom()
?pbinom()
?dbinom()
?rbinom()
rbinom(1000, 20, 0.6)
rpois(5, 14)
rpois(5, 14)
rpois(5, 14)
rpois(5, 14)
rpois(5, 14)
rbinom(1000, 20, 0.6)
rpois(5, 14)
rpois(5, 14)
rpois(5, 14)
replicate(10, rpois(5, 14))
replicate(10, rpois(5, 14))
replicate(10, rpois(5, 14))
replicate(5, rpois(5, 14))
replicate(6, rpois(5, 14))
replicate(6, mean(rpois(5, 14)))
replicate(6, mean(rpois(10, 14)))
replicate(6, mean(rpois(10, 14)))
replicate(6, mean(rpois(1000, 14)))
replicate(6, mean(rpois(1000, 14)))
mean(rpois(1000, 14))
mean(rpois(10, 14))
mean(rpois(10, 14))
mean(rpois(10, 14))
mean(rpois(10, 14))
mean(rpois(10, 14))
mean(rpois(1, 14))
mean(rpois(1, 14))
mean(rpois(1, 14))
mean(rpois(10000, 14))
mean(rpois(10000, 14))
mean(rpois(10000, 14))
mean(rpois(10000, 14))
mean(rpois(10000, 14))
mean(rpois(11, 14))
mean(rpois(1, 14))
mean(rpois(1, 14))
mean(rpois(1, 14))
mean(rpois(1, 14))
mean(rpois(1, 14))
mean(rpois(1, 14))
mean(rpois(1, 14))
mean(rpois(1, 14))
mean(rpois(2, 14))
mean(rpois(2, 14))
mean(rpois(2, 14))
mean(rpois(2, 14))
mean(rpois(2, 14))
mean(rpois(2, 14))
mean(rpois(2, 14))
mean(rpois(2, 14))
mean(rpois(2, 14))
mean(rpois(2, 14))
(rpois(2, 14))
(rpois(10, 14))
rbinom(1, 1, 0.5)
rbinom(1, 1, 0.5)
rbinom(1, 1, 0.5)
rbinom(1, 1, 0.5)
rbinom(1, 1, 0.5)
rbinom(1, 1, 0.5)
rbinom(1, 2, 0.5)
rbinom(1, 2, 0.5)
rbinom(1, 2, 0.5)
rbinom(10, 1, 0.5)
rbinom(10, 1, 0.5)
rbinom(10, 1, 0.5)
rbinom(10, 1, 0.5)
rbinom(10, 1, 0.5)
set.seed(76192)
dat <- rpois(1000, lambda = 14)
qqnorm(dat, pch = 16, col = rgb(0, 0, 0, 0.5))
qqline(dat, col = rgb(1, 0, 0, 0.6))
set.seed(199001)
x5bar <- replicate(1000, mean(rpois(5, lambda = 14)))
x20bar <- replicate(1000, mean(rpois(20, lambda = 14)))
x50bar <- replicate(1000, mean(rpois(50, lambda = 14)))
par(mfrow=c(1,2))
hist(x5bar, breaks=20, xlim=c(0.5 * 14, 1.5 * 14), freq = FALSE)
qqnorm(x5bar, ylab="x5bar", pch = 16, col = rgb(0, 0, 0, 0.5))
qqline(x5bar, col = rgb(1, 0, 0, 0.6))
hist(x20bar, breaks=20, xlim=c(0.5 * 14, 1.5 * 14), freq = FALSE)
qqnorm(x20bar, ylab="x20bar", pch = 16, col = rgb(0, 0, 0, 0.5))
qqline(x20bar, col = rgb(1, 0, 0, 0.6))
hist(x50bar, breaks=20, xlim=c(0.5 * 14, 1.5 * 14), freq = FALSE)
qqnorm(x50bar, ylab="x50bar", pch = 16, col = rgb(0, 0, 0, 0.5))
qqline(x50bar, col = rgb(1, 0, 0, 0.6))
x5bar
mean(x5bar)
mean(x20bar)
mean(x50bar)
dbinom(10,x5bar)
dpois(10, x5bar)
dpois(10, x5bar)
?dpois()
dpois(10, 14)
ppois(11, 14)
dat <- rexp(1000, rate = 14)
qqnorm(dat, pch = 16, col = rgb(0, 0, 0, 0.5))
qqline(dat, col = rgb(1, 0, 0, 0.6))
set.seed(81793)
y5bar <- replicate(1000, mean(rexp(5, rate = 14)))
y20bar <- replicate(1000, mean(rexp(20, rate = 14)))
y50bar <- replicate(1000, mean(rexp(50, rate = 14)))
par(mfrow=c(1,2))
hist(y5bar, breaks = 20, xlim = c(0, 4/14), freq = FALSE)
qqnorm(y5bar, ylab = "y5bar", pch = 16, col = rgb(0, 0, 0, 0.5))
qqline(y5bar, col = rgb(1, 0, 0, 0.6))
hist(y20bar, breaks = 20, xlim = c(0, 4/14), freq = FALSE)
qqnorm(y20bar, ylab = "y20bar", pch = 16, col = rgb(0, 0, 0, 0.5))
qqline(y20bar, col = rgb(1, 0, 0, 0.6))
hist(y20bar, breaks = 20, xlim = c(0, 4/14), freq = FALSE)
qqnorm(y20bar, ylab = "y20bar", pch = 16, col = rgb(0, 0, 0, 0.5))
qqline(y20bar, col = rgb(1, 0, 0, 0.6))
hist(y50bar, breaks = 20, xlim = c(0, 4/14), freq = FALSE)
qqnorm(y50bar, ylab = "y50bar", pch = 16, col = rgb(0, 0, 0, 0.5))
qqline(y50bar, col = rgb(1, 0, 0, 0.6))
mean(y5bar)
mean(y5bar)
mean(y5bar)
mean(y5bar)
mean(y5bar)
mean(y5bar)
mean(y5bar)
1/14
mean(y5bar)
mean(y20bar)
mean(y50bar)
mean(y50bar)
mean(y50bar)
mean(x50bar)
mean(x20bar)
mean(x5bar)
mean(x50bar)
mean(y50bar)
1/14
dexp(1/14, 14)
dexp(1/14, 14)
?dexp
?dexp(14,14)
dexp(14,14)
dexp(14,14)
dexp(1/4,14)
dexp(1/14,14)
dpois(14, 14)
hist(dat)
rexp(20, 14)
rexp(1, 14)
rexp(1, 14)
rexp(1, 14)
rexp(1, 14)
rexp(1, 14)
rexp(1, 14)
rexp(1, 14)
rexp(1, 14)
rexp(20, 14)
?rexp()
rpois(1,14)
rpois(1,14)
rpois(1,14)
rpois(1,14)
rpois(1,14)
?rexp()
?rexp()
?rexp()
?rexp()
rpois(10,14)
mean(rpois(10,14))
mean(rpois(10,14))
mean(rpois(10,14))
mean(rpois(10,14))
mean(rpois(10,14))
mean(rpois(10,14))
mean(rpois(10,14))
xbar
mean(x5bar)
mean(x5bar)
mean(x5bar)
mean(x5bar)
mean(x550ar)
mean(x50ar)
mean(x50bar)
library(maps)
maps.framce
franceMapEnv
map_data
map_data()
map_data("france")
maps_data("france")
map_data()
map_data("counties")
library(maps)
map_data("counties")
map_data("france")
map_data
map_data()
installed.packages("maps")
install.packages("maps")
map_data("counties")
library("ggplot2")
library(mapproj)
library(maps)
library(mapproj)
library(dplyr)
library(ggplot2)
knitr::opts_chunk$set(error=TRUE)
dataset <- read.csv("data/UFOCoords.csv", stringsAsFactors = FALSE)
source("benchmark_test_load.R")
source("scripts/summary.R")
source("scripts/b_chart.R")
describeData(dataset)
knitr::kable(all)
ufo_shapes(dataset)
ufo_us_states(dataset)
shiny::runApp('INFO201/INFO201-Final-Project')
runApp('INFO201/INFO201-Final-Project')
runApp('INFO201/INFO201-Final-Project')
runApp('INFO201/INFO201-Final-Project')
runApp('INFO201/INFO201-Final-Project')
runApp('INFO201/INFO201-Final-Project')
runApp('INFO201/INFO201-Final-Project')
shiny::runApp()
runApp()
